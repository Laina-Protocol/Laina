<strong> Loan Pool</strong><br />
Current liquidity: <strong id="current-liquid" aria-live="polite">???</strong><br />
<br />
<button data-increment aria-controls="current-liquid">Deposit</button>

<script>
import loan_pool from "../contracts/loan_pool";
    import { isAllowed, getPublicKey, signTransaction} from '@stellar/freighter-api';
    const button = document.querySelector("[data-increment]");
    const currentValue = document.querySelector("#current-value");
    if (await isAllowed()) {
      const publicKey = await getPublicKey();
      if (publicKey) loan_pool.options.publicKey = publicKey;
    }

    async function depositToLoanPool() {
        try {
          const adrs = await getPublicKey();
          console.log(adrs)
          const depo = { user: adrs, amount: BigInt(1000000000) };

          console.log(loan_pool.options)
          console.log(loan_pool.spec)
          console.log(loan_pool.fromJSON)

          const tx = await loan_pool.deposit(depo);
          const { result } = await tx.signAndSend({ signTransaction });

          console.log(result);
        } catch (error) {
          console.error("An error occurred:", error);
        }
      }


    button.addEventListener("click", async () => {
      button.disabled = true;
      button.classList.add("loading");

      // Ensure that getPublicKey and signTransaction are defined and available
      // Call the async function
      depositToLoanPool();

      // Only use `innerHTML` with contract values you trust!
      // Blindly using values from an untrusted contract opens your users to script injection attacks!
  
      button.disabled = false;
      button.classList.remove("loading");
    });
  </script>